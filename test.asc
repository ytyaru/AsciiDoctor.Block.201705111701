:source-highlighter: highlightjs
:toc:
:toclevels: 4

= AsciiDoc内でAsciiDoc構文をエスケープする

== AsciiDocをエスケープする 

=== インライン

pass:[`code`]

=== ブロック要素

++++
`++++`で囲うことでAsciiDoc構文の解釈をpassする。

== 見出し

のように書いても見出しにならない。
インラインの時は`pass:[ ... ]`を使う。
++++

== AsciiDocをブロック要素に含める

=== リテラルとリスティング

どちらも`<pre>`なので違いがわからない。異なる記法を併用すればネスト可能。

==== literal

http://asciidoctor.org/docs/user-manual/#literal-text-and-blocks

 リテラル。1つ以上のスペースキーで
 リテラルを記述できる。<pre>タグ。
    インデント

[literal]
リテラル。
`[literal]`にて記述した。<pre>タグ。
    インデント

....
`....`を囲うことで記述したリテラル。
<pre>タグ。
    インデント
....


==== listing

http://asciidoctor.org/docs/user-manual/#literal-text-and-blocks

[listing]
`[listing]`は<pre>タグ。
`== 見出し`のような内容が含まれると見出しになってしまう。
    インデント
```
----
== 見出しを<pre>でエスケープ
    インデント
----
```

----
```
== 見出しを<pre>でエスケープ
    インデント
```
----

== quote

[quote]
`[quote]`。
引用するときに使う。`<blockquote>`。

== sidebar

[sidebar]
`[sidebar]`。
`<div>`要素なので改行が保持されない。

== source

[source]
ソースコード。`<code>`要素。
複数行。

[source, asciidoc]
----
== 見出し
=== 見出し2
```
print('abc')
```
ハイライターがasciidoc言語を対象にしていないと正しく表示されない。
highlightjsではAsciiDocはオプションなので正しく表示されない。
----

